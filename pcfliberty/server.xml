<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>javaee-7.0</feature>
   </featureManager>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->
    
    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
         encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
         Then uncomment the keyStore element. -->
    <!--
    <keyStore password="manage"/> 
    -->
    
    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password, 
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element. 
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm"> 
        <!-- <user name="admin" password="manage" />  --> 
    </basicRegistry>
    
    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9080"
                  httpsPort="9443" />
                  
    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

	<!-- Declare the jar files for Oracle access through JDBC. -->
	<library id="OracleLib">
  		<fileset dir="${server.config.dir}/resources/oracle" includes="*.jar"/>
	</library>
	<!-- Declare the Worklight Server reports database -->
	<dataSource jndiName="jdbc/PCF" transactional="false">
  		<jdbcDriver libraryRef="OracleLib"/>
  		<properties.oracle driverType="thin" databaseName="${cloud.services.PCF.connection.name}" serverName="${cloud.services.PCF.connection.host}" portNumber="${cloud.services.PCF.connection.port}" user="${cloud.services.PCF.connection.user}" password="${cloud.services.PCF.connection.password}"/>
	</dataSource>

    <application id="HibernateJndi" location="HibernateJndi.war" name="HibernateJndi" type="war" context-root="HibernateJndi"/>
</server>
